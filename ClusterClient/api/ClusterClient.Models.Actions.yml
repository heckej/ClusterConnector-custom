### YamlMime:ManagedReference
items:
- uid: ClusterClient.Models.Actions
  commentId: T:ClusterClient.Models.Actions
  id: Actions
  parent: ClusterClient.Models
  children:
  - ClusterClient.Models.Actions.Answer
  - ClusterClient.Models.Actions.Default
  - ClusterClient.Models.Actions.Feedback
  - ClusterClient.Models.Actions.GetActions
  - ClusterClient.Models.Actions.Questions
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: Actions
  fullName: ClusterClient.Models.Actions
  type: Class
  source:
    remote:
      path: ClusterClient/Models/Actions.cs
      branch: cluster-client-c#
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: Actions
    path: Models/Actions.cs
    startLine: 6
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public class Actions
    content.vb: Public Class Actions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ClusterClient.Models.Actions.Questions
  commentId: F:ClusterClient.Models.Actions.Questions
  id: Questions
  parent: ClusterClient.Models.Actions
  langs:
  - csharp
  - vb
  name: Questions
  nameWithType: Actions.Questions
  fullName: ClusterClient.Models.Actions.Questions
  type: Field
  source:
    remote:
      path: ClusterClient/Models/Actions.cs
      branch: cluster-client-c#
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: Questions
    path: Models/Actions.cs
    startLine: 8
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public const string Questions = "questions"
    return:
      type: System.String
    content.vb: Public Const Questions As String = "questions"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ClusterClient.Models.Actions.Answer
  commentId: F:ClusterClient.Models.Actions.Answer
  id: Answer
  parent: ClusterClient.Models.Actions
  langs:
  - csharp
  - vb
  name: Answer
  nameWithType: Actions.Answer
  fullName: ClusterClient.Models.Actions.Answer
  type: Field
  source:
    remote:
      path: ClusterClient/Models/Actions.cs
      branch: cluster-client-c#
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: Answer
    path: Models/Actions.cs
    startLine: 9
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public const string Answer = "answers"
    return:
      type: System.String
    content.vb: Public Const Answer As String = "answers"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ClusterClient.Models.Actions.Default
  commentId: F:ClusterClient.Models.Actions.Default
  id: Default
  parent: ClusterClient.Models.Actions
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Actions.Default
  fullName: ClusterClient.Models.Actions.Default
  type: Field
  source:
    remote:
      path: ClusterClient/Models/Actions.cs
      branch: cluster-client-c#
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: Default
    path: Models/Actions.cs
    startLine: 10
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public const string Default = "no_action"
    return:
      type: System.String
    content.vb: Public Const Default As String = "no_action"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ClusterClient.Models.Actions.Feedback
  commentId: F:ClusterClient.Models.Actions.Feedback
  id: Feedback
  parent: ClusterClient.Models.Actions
  langs:
  - csharp
  - vb
  name: Feedback
  nameWithType: Actions.Feedback
  fullName: ClusterClient.Models.Actions.Feedback
  type: Field
  source:
    remote:
      path: ClusterClient/Models/Actions.cs
      branch: cluster-client-c#
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: Feedback
    path: Models/Actions.cs
    startLine: 11
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public const string Feedback = "feedback"
    return:
      type: System.String
    content.vb: Public Const Feedback As String = "feedback"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ClusterClient.Models.Actions.GetActions
  commentId: M:ClusterClient.Models.Actions.GetActions
  id: GetActions
  parent: ClusterClient.Models.Actions
  langs:
  - csharp
  - vb
  name: GetActions()
  nameWithType: Actions.GetActions()
  fullName: ClusterClient.Models.Actions.GetActions()
  type: Method
  source:
    remote:
      path: ClusterClient/Models/Actions.cs
      branch: cluster-client-c#
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: GetActions
    path: Models/Actions.cs
    startLine: 12
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public static ISet<string> GetActions()
    return:
      type: System.Collections.Generic.ISet{System.String}
    content.vb: Public Shared Function GetActions As ISet(Of String)
  overload: ClusterClient.Models.Actions.GetActions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: ClusterClient.Models
  commentId: N:ClusterClient.Models
  name: ClusterClient.Models
  nameWithType: ClusterClient.Models
  fullName: ClusterClient.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ClusterClient.Models.Actions.GetActions*
  commentId: Overload:ClusterClient.Models.Actions.GetActions
  name: GetActions
  nameWithType: Actions.GetActions
  fullName: ClusterClient.Models.Actions.GetActions
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullName.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
