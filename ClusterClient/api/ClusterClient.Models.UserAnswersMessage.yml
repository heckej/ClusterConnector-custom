### YamlMime:ManagedReference
items:
- uid: ClusterClient.Models.UserAnswersMessage
  commentId: T:ClusterClient.Models.UserAnswersMessage
  id: UserAnswersMessage
  parent: ClusterClient.Models
  children:
  - ClusterClient.Models.UserAnswersMessage.AddAnswer(ClusterClient.Models.UserAnswer)
  - ClusterClient.Models.UserAnswersMessage.AddAnswers(System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer})
  - ClusterClient.Models.UserAnswersMessage.answer_questions
  - ClusterClient.Models.UserAnswersMessage.ToJson
  langs:
  - csharp
  - vb
  name: UserAnswersMessage
  nameWithType: UserAnswersMessage
  fullName: ClusterClient.Models.UserAnswersMessage
  type: Class
  source:
    remote:
      path: ClusterClient/Models/UserAnswersMessage.cs
      branch: release-cluster-client-1.2.0
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: UserAnswersMessage
    path: Models/UserAnswersMessage.cs
    startLine: 8
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: 'public class UserAnswersMessage : UserMessage'
    content.vb: >-
      Public Class UserAnswersMessage
          Inherits UserMessage
  inheritance:
  - System.Object
  - ClusterClient.Models.UserMessage
  inheritedMembers:
  - ClusterClient.Models.UserMessage.user_id
  - ClusterClient.Models.UserMessage.action
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ClusterClient.Models.UserAnswersMessage.answer_questions
  commentId: P:ClusterClient.Models.UserAnswersMessage.answer_questions
  id: answer_questions
  parent: ClusterClient.Models.UserAnswersMessage
  langs:
  - csharp
  - vb
  name: answer_questions
  nameWithType: UserAnswersMessage.answer_questions
  fullName: ClusterClient.Models.UserAnswersMessage.answer_questions
  type: Property
  source:
    remote:
      path: ClusterClient/Models/UserAnswersMessage.cs
      branch: release-cluster-client-1.2.0
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: answer_questions
    path: Models/UserAnswersMessage.cs
    startLine: 12
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public List<UserAnswer> answer_questions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ClusterClient.Models.UserAnswer}
    content.vb: Public Property answer_questions As List(Of UserAnswer)
  overload: ClusterClient.Models.UserAnswersMessage.answer_questions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ClusterClient.Models.UserAnswersMessage.AddAnswer(ClusterClient.Models.UserAnswer)
  commentId: M:ClusterClient.Models.UserAnswersMessage.AddAnswer(ClusterClient.Models.UserAnswer)
  id: AddAnswer(ClusterClient.Models.UserAnswer)
  parent: ClusterClient.Models.UserAnswersMessage
  langs:
  - csharp
  - vb
  name: AddAnswer(UserAnswer)
  nameWithType: UserAnswersMessage.AddAnswer(UserAnswer)
  fullName: ClusterClient.Models.UserAnswersMessage.AddAnswer(ClusterClient.Models.UserAnswer)
  type: Method
  source:
    remote:
      path: ClusterClient/Models/UserAnswersMessage.cs
      branch: release-cluster-client-1.2.0
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: AddAnswer
    path: Models/UserAnswersMessage.cs
    startLine: 21
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public void AddAnswer(UserAnswer answer)
    parameters:
    - id: answer
      type: ClusterClient.Models.UserAnswer
    content.vb: Public Sub AddAnswer(answer As UserAnswer)
  overload: ClusterClient.Models.UserAnswersMessage.AddAnswer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ClusterClient.Models.UserAnswersMessage.AddAnswers(System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer})
  commentId: M:ClusterClient.Models.UserAnswersMessage.AddAnswers(System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer})
  id: AddAnswers(System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer})
  parent: ClusterClient.Models.UserAnswersMessage
  langs:
  - csharp
  - vb
  name: AddAnswers(ICollection<UserAnswer>)
  nameWithType: UserAnswersMessage.AddAnswers(ICollection<UserAnswer>)
  fullName: ClusterClient.Models.UserAnswersMessage.AddAnswers(System.Collections.Generic.ICollection<ClusterClient.Models.UserAnswer>)
  type: Method
  source:
    remote:
      path: ClusterClient/Models/UserAnswersMessage.cs
      branch: release-cluster-client-1.2.0
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: AddAnswers
    path: Models/UserAnswersMessage.cs
    startLine: 26
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public void AddAnswers(ICollection<UserAnswer> userAnswers)
    parameters:
    - id: userAnswers
      type: System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer}
    content.vb: Public Sub AddAnswers(userAnswers As ICollection(Of UserAnswer))
  overload: ClusterClient.Models.UserAnswersMessage.AddAnswers*
  nameWithType.vb: UserAnswersMessage.AddAnswers(ICollection(Of UserAnswer))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ClusterClient.Models.UserAnswersMessage.AddAnswers(System.Collections.Generic.ICollection(Of ClusterClient.Models.UserAnswer))
  name.vb: AddAnswers(ICollection(Of UserAnswer))
- uid: ClusterClient.Models.UserAnswersMessage.ToJson
  commentId: M:ClusterClient.Models.UserAnswersMessage.ToJson
  id: ToJson
  parent: ClusterClient.Models.UserAnswersMessage
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: UserAnswersMessage.ToJson()
  fullName: ClusterClient.Models.UserAnswersMessage.ToJson()
  type: Method
  source:
    remote:
      path: ClusterClient/Models/UserAnswersMessage.cs
      branch: release-cluster-client-1.2.0
      repo: https://github.com/heckej/P-O-Entrepreneurship-Team-A-ClusterConnector
    id: ToJson
    path: Models/UserAnswersMessage.cs
    startLine: 32
  assemblies:
  - ClusterClient
  namespace: ClusterClient.Models
  syntax:
    content: public override string ToJson()
    return:
      type: System.String
    content.vb: Public Overrides Function ToJson As String
  overridden: ClusterClient.Models.UserMessage.ToJson
  overload: ClusterClient.Models.UserAnswersMessage.ToJson*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: ClusterClient.Models
  commentId: N:ClusterClient.Models
  name: ClusterClient.Models
  nameWithType: ClusterClient.Models
  fullName: ClusterClient.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ClusterClient.Models.UserMessage
  commentId: T:ClusterClient.Models.UserMessage
  parent: ClusterClient.Models
  name: UserMessage
  nameWithType: UserMessage
  fullName: ClusterClient.Models.UserMessage
- uid: ClusterClient.Models.UserMessage.user_id
  commentId: P:ClusterClient.Models.UserMessage.user_id
  parent: ClusterClient.Models.UserMessage
  name: user_id
  nameWithType: UserMessage.user_id
  fullName: ClusterClient.Models.UserMessage.user_id
- uid: ClusterClient.Models.UserMessage.action
  commentId: P:ClusterClient.Models.UserMessage.action
  parent: ClusterClient.Models.UserMessage
  name: action
  nameWithType: UserMessage.action
  fullName: ClusterClient.Models.UserMessage.action
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ClusterClient.Models.UserAnswersMessage.answer_questions*
  commentId: Overload:ClusterClient.Models.UserAnswersMessage.answer_questions
  name: answer_questions
  nameWithType: UserAnswersMessage.answer_questions
  fullName: ClusterClient.Models.UserAnswersMessage.answer_questions
- uid: System.Collections.Generic.List{ClusterClient.Models.UserAnswer}
  commentId: T:System.Collections.Generic.List{ClusterClient.Models.UserAnswer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserAnswer>
  nameWithType: List<UserAnswer>
  fullName: System.Collections.Generic.List<ClusterClient.Models.UserAnswer>
  nameWithType.vb: List(Of UserAnswer)
  fullName.vb: System.Collections.Generic.List(Of ClusterClient.Models.UserAnswer)
  name.vb: List(Of UserAnswer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ClusterClient.Models.UserAnswer
    name: UserAnswer
    nameWithType: UserAnswer
    fullName: ClusterClient.Models.UserAnswer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ClusterClient.Models.UserAnswer
    name: UserAnswer
    nameWithType: UserAnswer
    fullName: ClusterClient.Models.UserAnswer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ClusterClient.Models.UserAnswersMessage.AddAnswer*
  commentId: Overload:ClusterClient.Models.UserAnswersMessage.AddAnswer
  name: AddAnswer
  nameWithType: UserAnswersMessage.AddAnswer
  fullName: ClusterClient.Models.UserAnswersMessage.AddAnswer
- uid: ClusterClient.Models.UserAnswer
  commentId: T:ClusterClient.Models.UserAnswer
  parent: ClusterClient.Models
  name: UserAnswer
  nameWithType: UserAnswer
  fullName: ClusterClient.Models.UserAnswer
- uid: ClusterClient.Models.UserAnswersMessage.AddAnswers*
  commentId: Overload:ClusterClient.Models.UserAnswersMessage.AddAnswers
  name: AddAnswers
  nameWithType: UserAnswersMessage.AddAnswers
  fullName: ClusterClient.Models.UserAnswersMessage.AddAnswers
- uid: System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer}
  commentId: T:System.Collections.Generic.ICollection{ClusterClient.Models.UserAnswer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<UserAnswer>
  nameWithType: ICollection<UserAnswer>
  fullName: System.Collections.Generic.ICollection<ClusterClient.Models.UserAnswer>
  nameWithType.vb: ICollection(Of UserAnswer)
  fullName.vb: System.Collections.Generic.ICollection(Of ClusterClient.Models.UserAnswer)
  name.vb: ICollection(Of UserAnswer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ClusterClient.Models.UserAnswer
    name: UserAnswer
    nameWithType: UserAnswer
    fullName: ClusterClient.Models.UserAnswer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ClusterClient.Models.UserAnswer
    name: UserAnswer
    nameWithType: UserAnswer
    fullName: ClusterClient.Models.UserAnswer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ClusterClient.Models.UserMessage.ToJson
  commentId: M:ClusterClient.Models.UserMessage.ToJson
  parent: ClusterClient.Models.UserMessage
  name: ToJson()
  nameWithType: UserMessage.ToJson()
  fullName: ClusterClient.Models.UserMessage.ToJson()
  spec.csharp:
  - uid: ClusterClient.Models.UserMessage.ToJson
    name: ToJson
    nameWithType: UserMessage.ToJson
    fullName: ClusterClient.Models.UserMessage.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ClusterClient.Models.UserMessage.ToJson
    name: ToJson
    nameWithType: UserMessage.ToJson
    fullName: ClusterClient.Models.UserMessage.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ClusterClient.Models.UserAnswersMessage.ToJson*
  commentId: Overload:ClusterClient.Models.UserAnswersMessage.ToJson
  name: ToJson
  nameWithType: UserAnswersMessage.ToJson
  fullName: ClusterClient.Models.UserAnswersMessage.ToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
